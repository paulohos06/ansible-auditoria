---
# assert file

- name: Test if auditd_buffer_size is set correctly
  ansible.builtin.assert:
    that:
      - auditd_buffer_size is defined
      - auditd_buffer_size is number
      - auditd_buffer_size >= 0
      - auditd_buffer_size <= 65000
    quiet: true

- name: Test if auditd_fail_mode is set correctly
  ansible.builtin.assert:
    that:
      - auditd_fail_mode is defined
      - auditd_fail_mode is number
      - auditd_fail_mode in [ 0, 1, 2 ]
    quiet: true

- name: Test if auditd_maximum_rate is set correctly
  ansible.builtin.assert:
    that:
      - auditd_maximum_rate is defined
      - auditd_maximum_rate is number
      - auditd_maximum_rate >= 0
    quiet: yes

- name: Test if auditd_enable_flag is set correctly
  ansible.builtin.assert:
    that:
      - auditd_enable_flag is defined
      - auditd_enable_flag is number
      - auditd_enable_flag in [ 0, 1, 2 ]
    quiet: true

- name: Test if auditd_local_events is set correctly
  ansible.builtin.assert:
    that:
      - auditd_local_events is defined
      - auditd_local_events is string
      - auditd_local_events in [ "yes", "no" ]
    quiet: true

- name: Test if auditd_write_logs is set correctly
  ansible.builtin.assert:
    that:
      - auditd_write_logs is defined
      - auditd_write_logs is string
      - auditd_write_logs in [ "yes", "no" ]
    quiet: true

- name: Test if auditd_log_file is set correctly
  ansible.builtin.assert:
    that:
      - auditd_log_file is defined
      - auditd_log_file is string
    quiet: true

- name: Test if auditd_log_group is set correctly
  ansible.builtin.assert:
    that:
      - auditd_log_group is defined
      - auditd_log_group is string
    quiet: true

- name: Test if auditd_log_format is set correctly
  ansible.builtin.assert:
    that:
      - auditd_log_format is defined
      - auditd_log_format is string
      - auditd_log_format in [ "ENRICHED", "NOLOG", "RAW" ]
    quiet: true

- name: Test if auditd_flush is set correctly
  ansible.builtin.assert:
    that:
      - auditd_flush is defined
      - auditd_flush is string
      - auditd_flush in [ "none", "incremental", "incremental_async", "data", "sync" ]
    quiet: true

- name: Test if auditd_freq is set correctly
  ansible.builtin.assert:
    that:
      - auditd_freq is defined
      - auditd_freq is number
      - auditd_freq >= 0
    quiet: true

- name: Test if auditd_max_log_file is set correctly
  ansible.builtin.assert:
    that:
      - auditd_max_log_file is defined
      - auditd_max_log_file is number
      - auditd_max_log_file > 0
    quiet: true

- name: Test if auditd_num_logs is set correctly
  ansible.builtin.assert:
    that:
      - auditd_num_logs is defined
      - auditd_num_logs is number
      - auditd_num_logs > 0
      - auditd_num_logs < 99
    quiet: true

- name: Test if auditd_priority_boost is set correctly
  ansible.builtin.assert:
    that:
      - auditd_priority_boost is defined
      - auditd_priority_boost is number
      - auditd_priority_boost in [ 0, 1, 2, 3, 4 ]
    quiet: true

- name: Test if auditd_name_format is set correctly
  ansible.builtin.assert:
    that:
      - auditd_name_format is defined
      - auditd_name_format is string
      - auditd_name_format in [ "none", "hostname", "fqd", "numeric", "user" ]
    quiet: true

- name: Test if auditd_max_log_file_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_max_log_file_action is defined
      - auditd_max_log_file_action is string
      - auditd_max_log_file_action in [ "ignore", "syslog", "suspend", "rotate" ]
    quiet: true

- name: Test if auditd_space_left is set correctly
  ansible.builtin.assert:
    that:
      - auditd_space_left is defined
      - auditd_space_left is number
      - auditd_space_left >= 0
      - auditd_space_left <= 100
    quiet: true

- name: Test if auditd_space_left_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_space_left_action is defined
      - auditd_space_left_action is string
      - auditd_space_left_action in [ "ignore", "syslog", "rotate", "email", "exec", "suspend", "single", "halt" ]
    quiet: true

- name: Test if auditd_verify_email is set correctly
  ansible.builtin.assert:
    that:
      - auditd_verify_email is defined
      - auditd_verify_email is string
      - auditd_verify_email in [ "yes", "no" ]
    quiet: true

- name: Test if auditd_action_mail_acct is set correctly
  ansible.builtin.assert:
    that:
      - auditd_action_mail_acct is defined
      - auditd_action_mail_acct is string
    quiet: true

- name: Test if auditd_admin_space_left is set correctly
  ansible.builtin.assert:
    that:
      - auditd_admin_space_left is defined
      - auditd_admin_space_left is number
      - auditd_admin_space_left >= 0
      - auditd_admin_space_left <= 100
    quiet: true

- name: Test if auditd_admin_space_left_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_admin_space_left_action is defined
      - auditd_admin_space_left_action is string
      - auditd_admin_space_left_action in [ "ignore", "syslog", "rotate", "email", "exec", "suspend", "single", "halt" ]
    quiet: yes

- name: Test if auditd_disk_full_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_disk_full_action is defined
      - auditd_disk_full_action is string
      - auditd_disk_full_action in [ "ignore", "syslog", "rotate", "exec", "suspend", "single", "halt" ]
    quiet: yes

- name: Test if auditd_disk_error_action is set correctly
  ansible.builtin.assert:
    that:
      - auditd_disk_error_action is defined
      - auditd_disk_error_action is string
      - auditd_disk_error_action in [ "ignore", "syslog", "rotate", "exec", "suspend", "single", "halt" ]
    quiet: yes
